HDFTACTGRP(*NO)  ACTGRP(*new)                                             
HDECEDIT('.')                                                             
FLFFIRM    UF   E           K DISK    EXTFILE('ODIVERS/LFFIRM')           
FPFMVTK    O  A E             DISK    EXTFILE(FIL1) USROPN                
FPFMVTA    O  A E             DISK    EXTFILE(FIL2) USROPN                
FJNLFNO    IF   E           K DISK                                        
FD365LOGF  O  A E             DISK                                        
 *------------------------------------------------------------------------
DTRANNR           S                   LIKE(FITRAN)                        
 *------------------------------------------------------------------------
D xmlHandler      PR            10i 0                                     
D   ignore                       1a                                       
D   event                       10i 0 value                               
D   string                        *   value                               
D   stringLen                   20i 0 value                               
D   exceptionId                 10i 0 value                               
 *------------------------------------------------------------------------
D XML             s            500a   varying                             
D ignoreMe        s              1a                                       
D xmlfile         s            256a                                       
D pdf             s            256a                                       
D firma           s              3a                                       
D library         s              4a                                       
D klant           s              8a                                       
D voucher         s             20a                                       
D transdate       s             10a                                       
D datclc          s               d                                       
D dat8            s              8s 0  
D datum           s              8a                                       
D sqlstmt         s            500a                                       
D amt             s             11s 2                                     
D fil1            s             21a                                       
D fil2            s             21a                                       
D wkArray         s             10a   dim(5)                              
D journaal        s             10a                                       
D totaal          s             10i 0                                     
D verwerkt        s             10i 0                                     
 *------------------------------------------------------------------------
D                 DS                                                      
DJJ                       1      4  0                                     
DMM                       5      6  0                                     
DDD                       7      8  0                                     
DIMPD                     1      8  0                                     
C     *entry        plist                                                 
C                   parm                    xmlfile         256           
 *------------------------------------------------------------------------
C/EXEC SQL                                                                
C+ SET OPTION COMMIT=*NONE                                                
C/END-EXEC                                                                
 *------------------------------------------------------------------------
C                   eval       verwerkt = 0                               
C                   eval       XML = %trimr(xmlfile)       
C                   on-error                                              
C                   endmon                                                
 *------------------------------------------------------------------------
C                   if         verwerkt <> totaal                         
C                   eval       msg = 'NIET alle transacties van bestand ' 
C                              +  %trimr(xmlfile) + ' werden verwerkt.'   
C                   call      'D365IN75M'                                 
C                   parm                    msg            1024           
C                   parm                    msge              1           
C                   eval      logmsg = %trimr(msg)                        
C                   write     D365LOGR                                    
C                   endif                                                 
 *------------------------------------------------------------------------
C                   eval       *inlr = *on                                
 *------------------------------------------------------------------------  

P xmlHandler      B   
D xmlHandler      PI            10i 0                 
D   ignore                       1a                   
D   event                       10i 0 value           
D   string                        *   value           
D   stringLen                   20i 0 value           
D   exceptionId                 10i 0 value           
                                                      
D value           s          65535a   based(String)   
D ucs2val         s          16363c   based(String)   
                                                      
D MAX_DEPTH       c                   100             
D depth           s             10i 0 inz(0) static   
D stackname       s          65535a   varying inz('') 
D                                     dim(MAX_DEPTH)  
D                                     static          
D stackval        s          65535a   varying inz('') 
D                                     dim(MAX_DEPTH)          
D                                     static                  
                                                              
C                   select                                    
                                                              
 * start XML document intialisatie                            
C                   when      event = *XML_START_DOCUMENT     
C                   eval      depth=0                         
C                   eval      stackname(*) = ''               
C                   eval      stackval(*) = ''                
                                                              
 * meer elementen dan  64= fout in parsing                    
C                   when      depth >= MAX_DEPTH              
C                             and ( event = *XML_START_ELEMENT
C                             or event = *XML_ATTR_NAME )     
C                   return    -1                              
 * start van nieuw element
C                   when      event = *XML_START_ELEMENT             
C                   eval      depth += 1                             
C                   if        depth = 1                              
C                   eval      stackname(depth) = '/'                 
C                              + %subst(value:1:stringLen)           
C                   else                                             
C                   eval      stackname(depth) = stackname(depth-1) +
C                               + %subst(value:1:stringLen)          
C                   endif                                            
C                   eval      stackval(depth)  = '' 

 * start van nieuw attribut                                          
C                   when      event = *XML_ATTR_NAME                 
C                   eval      depth += 1                             
C                   eval      stackname(depth) = stackname(depth-1) +
C                             + %subst(value:1:stringLen)            
C                   eval      stackval(depth)  = ''             

 * start van nieuw attribut                                         
C                   when      event = *XML_END_ELEMENT              
C                             or event = *XML_END_ATTR              
C                   if        depth > 0                             
C                   select                                          
C                   when      stackname(depth) =                    
C                              '/OptiGrator/Summary/NumberCustTrans'
     
C                   monitor                                          
C                   eval      totaal=%int(%trim(stackval(depth)))    
C                   on-error                                         
C                   endmon                                           
                                                                     
C                   when      stackname(depth) =                     
C                              '/OptiGrator/CustTrans/CustTable/dataA
                                                                     
C                   eval      library=*blanks                        
C                   eval      firma=*blanks                          
C                   eval      firma=%trim(stackval(depth))           
C                   select                                           
C                   when      firma = 'wnv'                          
C                   eval      library = 'WVDJ'                       
C                   z-add     40            fnr               3 0    
C                   when      firma = 'act'           
C                   eval      library = 'ACDJ'        
C                   z-add     20            fnr       
C                   when      firma = 'grp'           
C                   eval      library = 'WGDJ'        
C                   z-add     1             fnr       
C                   when      firma = 'hls'           
C                   eval      library = 'HEDJ'        
C                   z-add     31            fnr       
C                   when      firma = 'ind'           
C                   eval      library = 'INDJ'        
C                   z-add     35            fnr    
C	     	    when      firma = 'int'   
C                   eval      library = 'WIDJ' 
C                   z-add     2             fnr
C                   when      firma = 'sfo'    
C                   eval      library = 'SFDJ' 
C                   z-add     64            fnr
C                   when      firma = 'wbl'    
C                   eval      library = 'BADJ' 
C                   z-add     22            fnr
C                   endsl                      

C                   when      stackname(depth) = '/OptiGrator/CustTrans/'
C                             + 'CustTable/ALTLegacyCustID '             
C                   eval      klant=*blanks                              
C                   eval      klant=%trim(stackval(depth))               

C		    when      stackname(depth) = '/OptiGrator/CustTrans/'
C		              + 'TransDate'                               
C		    eval      transdate=*blanks                           
C	            eval      transdate=%trim(%subst(stackval(depth):1:10)
C		    monitor                                               
C		    eval      datclc = %date(%trim(transdate):*usa)    
C                   on-error                                             
C                   eval      datclc = %date()                           
C                   endmon                                               
C     *iso          movel     datclc        dat8                         
C                   movel     dat8          datum                        
                                                                         
C                   when      stackname(depth) = '/OptiGrator/CustTrans/'
C                             + 'AmountCur'                              
C                   eval      amt=0                                      
C                   eval      amt=%dec(%trim(stackval(depth)):11:2)      
                                                                         
C                   when      stackname(depth) = '/OptiGrator/CustTrans' 
C                   monitor                                              
 ** schrijven naar pfmvtk en pfmvta                                      
C                   eval      fil1 = %trim(library) + '/PFMVTK'          
C                   eval      fil2 = %trim(library) + '/PFMVTA'      
C                   if        not %open(pfmvtk)                           
C                   open      pfmvtk                                      
C                   endif                                                 
C                   if        not %open(pfmvta)                           
C                   open      pfmvta                               
C                   endif                                          
C     FNR           CHAIN     LFFIRM                             50
C     FITRAN        ADD       1             FITRAN                 
C  N50              UPDATE    PFFIRMR                              
C                   Z-ADD     FITRAN        TRANNR                 
C                   clear                   pfmvtkr                
C                   MOVEL     klant         KLANTNR           8 0  
C                   Z-ADD     KLANTNR       MKLNR    
C                   MOVEL     DATUM         IMPD     
C                   Z-ADD     DD            MIMPDD   
C                   Z-ADD     MM            MIMPMM   
C                   Z-ADD     JJ            MIMPJJ   
C     KEYFNO        KLIST                            
C                   KFLD                    FIRMA    
C                   KFLD                    JNLFO    
C                   MOVEL     JOURNAAL      JNLFO    
C     JNLFO         IFNE      'OP'                   
C     KEYFNO        CHAIN     JNLFNO                 
C                   IF        %FOUND                 
C                   MOVEL     JNL400        MJN      
C                   MOVEL     'BET'         MOMSCH   
C                   Z-ADD     4             MSOORT   
C                   ELSE                             
C                   MOVEL     '030'         MJN                   
C                   MOVEL     'DIV'         MOMSCH                
C                   Z-ADD     5             MSOORT                
C                   ENDIF                                         
C                   EVAL      MNRDOK = %DEC(%TRIM(WKARRAY(2)):3:0)
C     amt           IFLT      0                                   
C                   Z-SUB     AMT           MBDRB                 
C                   MOVEL     'C'           MDC                   
C                   ELSE                                          
C                   Z-ADD     AMT           MBDRB                 
C                   MOVEL     'D'           MDC                   
C                   ENDIF                                         
C                   Z-ADD     TRANNR        MNTRAN                
C                   MOVEL     VOUCHER       MOPM                  
C                   WRITE     PFMVTKR                             
C                   MOVEL     '400001'      AREKNR                
C                   WRITE     PFMVTAR                
C                   ADD       1             VERWERKT 
C     MDC           IFEQ      'D'                    
C                   MOVEL     'C'           MDC      
C                   ELSE                             
C                   MOVEL     'D'           MDC      
C                   ENDIF                            
C                   MOVEL     '489001'      AREKNR   
C                   WRITE     PFMVTAR                
C                   ENDIF                            
C                   close     pfmvtk                 
C                   close     pfmvta                 
C                   on-error                         
C                   endmon                                              
C                   eval      sqlstmt=*blanks                           
C**                 eval      sqlstmt = 'UPDATE ' +%trim(library) + '/' 
C**                           + 'PFBEW SET BBUFLA = ' + X'7D' + 'Y'     
C**                           + X'7D' + ' WHERE BJNL = '                
C**                           + X'7D' + '001' + X'7D' + ' AND BDOCNR = '
C**                           + %TRIM(FACTUUR)                          
                                                                        
C**/EXEC SQL                                                            
C**+ EXECUTE IMMEDIATE :SQLSTMT                                         
C**/END-EXEC                                                            
                                                                        
C                   endsl                                               
                                                                        
C                   eval      depth -= 1                                
c                   endif                                                 
                                                                          
C                   when      event = *XML_CHARS                          
C                             or event = *XML_PREDEF_REF                  
C                             or event = *XML_ATTR_CHARS                  
C                             or event = *XML_ATTR_PREDEF_REF             
C                   eval      stackval(depth) += %subst(value:1:stringLen)
                                                                          
 * omzetten van utf                                                       
C                   when      event = *XML_UCS2_REF                       
C                             or event = *XML_ATTR_UCS2_REF               
C                   eval      stackval(depth) += %char(%subst( ucs2val : 1
C                             : %div(stringLen:2) ))                      
                                                                          
C                   endsl                                                     
C                   return    0
P                 E               




               


                                                                 